#pragma checksum "C:\Users\A J W\source\repos\HAJ Updation\25-12-202111\26-01-2022\PB_Meet\AJWManagementPortal\Areas\Store\Views\Store\StoreDashboard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "111bc076e6861eaf0242a51f994a5db98e0d61d4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Store_Views_Store_StoreDashboard), @"mvc.1.0.view", @"/Areas/Store/Views/Store/StoreDashboard.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\A J W\source\repos\HAJ Updation\25-12-202111\26-01-2022\PB_Meet\AJWManagementPortal\Areas\Store\Views\_ViewImports.cshtml"
using AJWManagementPortal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\A J W\source\repos\HAJ Updation\25-12-202111\26-01-2022\PB_Meet\AJWManagementPortal\Areas\Store\Views\_ViewImports.cshtml"
using AJWManagementPortal.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"111bc076e6861eaf0242a51f994a5db98e0d61d4", @"/Areas/Store/Views/Store/StoreDashboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7f307faba2f459ec4b01c5ef0965c9ff6ff9eef1", @"/Areas/Store/Views/_ViewImports.cshtml")]
    public class Areas_Store_Views_Store_StoreDashboard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "C:\Users\A J W\source\repos\HAJ Updation\25-12-202111\26-01-2022\PB_Meet\AJWManagementPortal\Areas\Store\Views\Store\StoreDashboard.cshtml"
  
    ViewData["Title"] = "StoreDashboard";
    Layout = "~/Views/Shared/_LayoutStore.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n\r\n");
            WriteLiteral("\r\n\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n\r\n\r\n\r\n    </div>\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            WriteLiteral(@"<style>
    .filterDiv {
        float: left;
        background-color: #2196F3;
        color: #ffffff;
        width: 100px;
        line-height: 100px;
        text-align: center;
        margin: 2px;
        display: none;
    }

    .show {
        display: block;
    }

    .container {
        margin-top: 0px;
        overflow: hidden;
    }

    /* Style the buttons */
    .btn {
        border: none;
        outline: none;
        padding: 12px 16px;
        background-color: #f1f1f1;
        cursor: pointer;
    }

        .btn:hover {
            background-color: #ddd;
        }

        .btn.active {
            background-color: #666;
            color: white;
        }
</style>
");
            WriteLiteral(@"
<div class=""container"">
    <h2>Filter DIV Elements</h2>

    <div id=""myBtnContainer"">
        <button class=""btn active"" onclick=""filterSelection('all')""> Show all</button>
        <button class=""btn"" onclick=""filterSelection('cars')""> Cars</button>
        <button class=""btn"" onclick=""filterSelection('animals')""> Animals</button>
        <button class=""btn"" onclick=""filterSelection('fruits')""> Fruits</button>
        <button class=""btn"" onclick=""filterSelection('colors')""> Colors</button>
    </div>

    <div class=""container"">
        <div class=""filterDiv cars"">BMW</div>
        <div class=""filterDiv colors fruits"">Orange</div>
        <div class=""filterDiv cars"">Volvo</div>
        <div class=""filterDiv colors"">Red</div>
        <div class=""filterDiv cars animals"">Mustang</div>
        <div class=""filterDiv colors"">Blue</div>
        <div class=""filterDiv animals"">Cat</div>
        <div class=""filterDiv animals"">Dog</div>
        <div class=""filterDiv fruits"">Melon</div>
        <");
            WriteLiteral("div class=\"filterDiv fruits animals\">Kiwi</div>\r\n        <div class=\"filterDiv fruits\">Banana</div>\r\n        <div class=\"filterDiv fruits\">Lemon</div>\r\n        <div class=\"filterDiv animals\">Cow</div>\r\n    </div>\r\n\r\n");
            WriteLiteral("</div>\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        filterSelection(""all"")
        function filterSelection(c) {
            var x, i;
            x = document.getElementsByClassName(""filterDiv"");
            if (c == ""all"") c = """";
            for (i = 0; i < x.length; i++) {
                w3RemoveClass(x[i], ""show"");
                if (x[i].className.indexOf(c) > -1) w3AddClass(x[i], ""show"");
            }
        }

        function w3AddClass(element, name) {
            var i, arr1, arr2;
            arr1 = element.className.split("" "");
            arr2 = name.split("" "");
            for (i = 0; i < arr2.length; i++) {
                if (arr1.indexOf(arr2[i]) == -1) { element.className += "" "" + arr2[i]; }
            }
        }

        function w3RemoveClass(element, name) {
            var i, arr1, arr2;
            arr1 = element.className.split("" "");
            arr2 = name.split("" "");
            for (i = 0; i < arr2.length; i++) {
                while (arr1.indexOf(arr2[i]) > -1) {
            ");
                WriteLiteral(@"        arr1.splice(arr1.indexOf(arr2[i]), 1);
                }
            }
            element.className = arr1.join("" "");
        }

        // Add active class to the current button (highlight it)
        var btnContainer = document.getElementById(""myBtnContainer"");
        var btns = btnContainer.getElementsByClassName(""btn"");
        for (var i = 0; i < btns.length; i++) {
            btns[i].addEventListener(""click"", function () {
                var current = document.getElementsByClassName(""active"");
                current[0].className = current[0].className.replace("" active"", """");
                this.className += "" active"";
            });
        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
